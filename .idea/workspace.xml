<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ce725056-88ce-4d3c-b07a-e57b56e81b48" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/alertmanager/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/conf/alertmanager/config.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/e3w/config.ini" beforeDir="false" afterPath="$PROJECT_DIR$/conf/e3w/config.ini" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/grafana/config.monitoring" beforeDir="false" afterPath="$PROJECT_DIR$/conf/grafana/config.monitoring" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/grafana/provisioning/dashboards/dashboard.yml" beforeDir="false" afterPath="$PROJECT_DIR$/conf/grafana/provisioning/dashboards/dashboard.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/grafana/provisioning/datasources/datasource.yml" beforeDir="false" afterPath="$PROJECT_DIR$/conf/grafana/provisioning/datasources/datasource.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/prometheus/alert.rules" beforeDir="false" afterPath="$PROJECT_DIR$/conf/prometheus/alert.rules" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/prometheus/prometheus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/conf/prometheus/prometheus.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo-cli/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/demo-cli/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo-cli/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/demo-cli/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo-cli/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/demo-cli/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo-cli/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/demo-cli/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo-cli/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/demo-cli/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/db/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/db/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/handler/attribute.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/handler/attribute.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/handler/brand.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/handler/brand.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/handler/category.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/handler/category.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/handler/image.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/handler/image.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/handler/product.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/handler/product.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/model/attribute.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/model/attribute.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/model/brand.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/model/brand.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/model/category.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/model/category.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/model/image.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/model/image.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/model/product.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/model/product.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/proto/product/product.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/proto/product/product.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/proto/product/product.proto" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/proto/product/product.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/repo/attribute.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/repo/attribute.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/repo/brand.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/repo/brand.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/repo/category.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/repo/category.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/repo/image.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/repo/image.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/repo/product.go" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/repo/product.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-cli/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/user-cli/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-cli/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/user-cli/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-cli/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-cli/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/db/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/db/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/handler/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/handler/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/model/password.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/model/password.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/model/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/model/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/proto/user/user.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/proto/user/user.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/proto/user/user.proto" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/proto/user/user.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/repo/password.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/repo/password.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/repo/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/repo/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/service/token.go" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/service/token.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>policy</find>
      <find>pb.User</find>
      <find>pb.PasswordReset</find>
      <find>string(uint(id)</find>
      <find>laracom</find>
    </findStrings>
    <replaceStrings>
      <replace>model.User</replace>
      <replace>model.PasswordReset</replace>
    </replaceStrings>
  </component>
  <component name="GOROOT" path="$PROJECT_DIR$/../golang" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="ProjectId" id="1mvHBUOTy3IbZS97CgqIpaZKtnJ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\policy\conf" />
      <recent name="D:\policy\demo-cli" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go (3)">
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="policy" />
      <working_directory value="$PROJECT_DIR$/demo-cli" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/demo-cli/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="policy" />
      <working_directory value="$PROJECT_DIR$/user-service" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/user-service/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (3)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="policy" />
      <working_directory value="$PROJECT_DIR$/product-service" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/product-service/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="policy" />
      <working_directory value="$PROJECT_DIR$/demo-service" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/demo-service/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go (3)" />
        <item itemvalue="Go Build.go build main.go (2)" />
        <item itemvalue="Go Build.go build main.go (1)" />
        <item itemvalue="Go Build.go build main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.cn</proxy>
  </component>
</project>